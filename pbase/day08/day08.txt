day08筆記：
字典的基本函數操作：
len(x) 返回字典的長度
max(x) 返回字典的鍵的最大值
mix(x) 返回字典的最小值
sum(x) 返回字典中所有鍵的和
any(x) 真值測試,任意見為值,則返回True,否則為False
all(x) 真值測試,所有鍵為值,則返回True,否則為False

示例：
 d = {3 : "333", 8 : "888", 5 : "555"}
 len(d) # 3
 max(d) # 8
 min(d) # 3
 sum(d) # 16


集合　set

	集合是一種可變的容器
	集合內的數據對象都是唯一的(不能重複多次)
	集合是無序的存儲結構,集合中的數據沒有先後關係
	集合是相當於只有鍵.沒有值的字典,則鍵是集合的數據
	集合內的元素必須式不可變對象
	集合是可迭代的(可以用for等遍歷)

生成空的值：
	set()
生成非空集合：
	set(iterable) 函數
例：
	　set([3,5,7,9])  # {3,5,7,9}
	{3, 5, 7, 9}
	 set("WeiMingZe")
	 set("ABCCBA")   # {'A', 'B', 'C'}
	 s = set({"name" : "tarena", "age" : 15})
	 s = set( ("ABC", 123, True) )
	 s = {True, None, "ABC", (1,2,3), 3.14}

集合：
	交集, 併集, 補集, 子集, 超集
	A = {1,2,3}
	B = {2,3,4}
	交集　= {2,3}
	併集　=　{1,2,3,4}
	補集 A - B = {1}
		B - A = {4}

	A - B #　生成 {1}
	B - A # 生成 {4}
	A - {5,6,7} #{1,2,3}

集合的運算：
-　生成兩個集合的補集
	A = {1,2,3}
	B = {2,3,4}
	A - B  # 生成{1}
	B - A  # 生成{4}
	B - A # 生成 {4}
	A - {5,6,7} #{1,2,3}

| 生成兩個集合的併集
	A = {1,2,3}
	B = {2,3,4}
	A | B  # {1,2,3,4}

&　生成兩個集合的交集
	A = {1,2,3}
	B = {2,3,4}
	A & B  #{2,3}
	{1,2} & {5,6} # set()

^ 生成兩個對稱補集
	A = {1,2,3}
	B = {2,3,4}
	A ^ B # {1, 4}
	A ^ B --> (A-B) | (B-A)

> 判斷一個集合是令一個集合的真超集
< 判斷一個集合是令一個集合的真子集
	A = {1,2,3}
	C = {2,3}
	A > C   # True
	C < A   # True

== / != 判斷集合相同/不相同
　　A = {1,2,3}
  C = {2,3}
  D = {2,1,3}
  A == D  # True
  A == C  # False

>=  <=  判斷超集和相同/子集和相同
　　例：略

in / not in 運算符
	等同於字典中的in/not in,判斷某個值是否存在于集合中
	not in 與　in　返回值相反


Python3中集合常用的方法
S代表集合對象
S.add(e)
在集合添加一個新元素,如果元素已經存在,則不添加
S.clear() 清空集合內所有的元素
S.copy ()　複製集合
S.differece(S2) 等同於 S-S2
S.difference_update(S) 等同於　S=S^s2
S.descard(digit)
從集合S中移除一個數字,如果digit不是數字,則都不做
S.intersection(s2) 等同於S & s2
S.intersection_update(s2) 等同於　S = S & s2
S.issubset(s2) 
如果S與s2交集為非空返回True,否則返回False
S.pop() 從集合S中刪除一個隨機元素
S.remove(e) 從集合刪除一個元素,如果元素不存在則會產生錯誤
S.union(s2) 生成S與s2的全集等同於　S | s2
S.update(s2) 等同於　S = S | s2

集合式可迭代對象
例：
　s = {"abc",123, (1970, 1, 1)}
 for x in s :
 	print(x)

字典也是可迭代的對象：
例：
　d = {"name" : 'tarena', (2002, 1, 1) : "生日"}
　for x in d:
 	print(x)

用於集合的函數：
len(x)
max(x)
min(x)
sum(x)
any(x)
all(x)

集合推導式：
	語法：
	{　表達式　for 變量　in 可迭代對象　(if條件表達式)}

示例：
	用列表轉化為集合,
	name = ["Tom", "Jerry", "Spike", "Tom", "Jerry", "Tyke"]
	animals_set = {n for n in names}

集合推導式可以嵌套

總結：
三種可變得數據類型：
	list
	dict
	set

固定集合　forzenset
	創建一個不可變得,無序的,含有唯一元素的集合

創建空的固定集合
	　frozenset()
創建非空的固定集合
	 frozenset(iterable)
例：
	 f = frozenset([1,3,5,7,9])

運算：
	&　交集
	| 併集
	- 補集
	^ 對稱補集
	in / not in 運算
	> >= < <= == !=
	(以上運算　等同於set中的用法)

固定集合的方法：
	相當於集合全部方法,去掉修改集合的方法

固定集合可以作為字典的鍵,還可以作為集合的值





